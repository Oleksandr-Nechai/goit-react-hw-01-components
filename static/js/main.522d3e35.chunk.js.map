{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Profile.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","styles","profile","description","src","alt","name","label","classNAme","quantity","followers","views","likes","prototype","PropTypes","string","isRequired","shape","number","App","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,SAAW,4B,+ICExQ,SAASC,EAAT,GAA8D,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAChD,OACI,sBAAKC,UAAWC,IAAOC,QAAvB,UACI,sBAAKF,UAAWC,IAAOE,YAAvB,UACI,qBACIC,IAAKN,EACLO,IAAI,cACJL,UAAWC,IAAOH,SAEtB,mBAAGE,UAAWC,IAAOK,KAArB,SAA4BX,IAC5B,oBAAGK,UAAWC,IAAOL,IAArB,cAA4BA,KAC5B,mBAAGI,UAAWC,IAAOJ,SAArB,SAAgCA,OAGpC,qBAAIG,UAAWC,IAAOF,MAAtB,UACI,+BACI,sBAAMC,UAAWC,IAAOM,MAAxB,uBACA,sBAAMC,UAAWP,IAAOQ,SAAxB,SAAmCV,EAAMW,eAE7C,+BACI,sBAAMV,UAAWC,IAAOM,MAAxB,mBACA,sBAAMP,UAAWC,IAAOQ,SAAxB,SAAmCV,EAAMY,WAE7C,+BACI,sBAAMX,UAAWC,IAAOM,MAAxB,mBACA,sBAAMP,UAAWC,IAAOQ,SAAxB,SAAoCV,EAAMa,iBAO9DlB,EAAQmB,UAAY,CAChBlB,SAAUmB,IAAUC,OAAOC,WAC3BpB,IAAKkB,IAAUC,OAAOC,WACtBnB,SAAUiB,IAAUC,OAAOC,WAC3BlB,OAAQgB,IAAUC,OAAOC,WACzBjB,MAAOe,IAAUG,MAAM,CACnBP,UAAUI,IAAUI,OAAOF,WAC3BL,MAAOG,IAAUI,OAAOF,WACxBJ,MAAME,IAAUI,OAAOF,cAMhBtB,Q,OC9BAyB,MAff,WACE,OACE,8BACE,cAAC,EAAD,CACJxB,SAAUyB,EAAKzB,SACfC,IAAKwB,EAAKxB,IACVC,SAAUuB,EAAKvB,SACfC,OAAQsB,EAAKtB,OACbC,MAAOqB,EAAKrB,WCACsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.522d3e35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1euNg\",\"description\":\"Profile_description__3_Vue\",\"avatar\":\"Profile_avatar__2NfnG\",\"name\":\"Profile_name__3J607\",\"tag\":\"Profile_tag__1s8AL\",\"location\":\"Profile_location__3J3Kh\",\"stats\":\"Profile_stats__3_0Zg\",\"quantity\":\"Profile_quantity__3Uq_H\"};","import styles from \"./Profile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Profile({ username, tag, location, avatar, stats }) {\r\n    return (\r\n        <div className={styles.profile }>\r\n            <div className={styles.description}>\r\n                <img\r\n                    src={avatar}\r\n                    alt=\"User avatar\"\r\n                    className={styles.avatar}\r\n                />\r\n                <p className={styles.name}>{username}</p>\r\n                <p className={styles.tag}>@{tag}</p>\r\n                <p className={styles.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={styles.stats}>\r\n                <li>\r\n                    <span className={styles.label}>Followers</span>\r\n                    <span classNAme={styles.quantity}>{stats.followers }</span>\r\n                </li>\r\n                <li>\r\n                    <span className={styles.label}>Views</span>\r\n                    <span className={styles.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={styles.label}>Likes</span>\r\n                    <span className={styles.quantity}>{ stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.prototype = {\r\n    username: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n        followers:PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes:PropTypes.number.isRequired,\r\n    }   \r\n    ),\r\n\r\n}\r\n\r\nexport default Profile;","import Profile from \"./components/Profile/index.js\";\nimport user from \"./data/user.json\";\n\n\nfunction App() {\n  return (\n    <div >\n      <Profile\n  username={user.username}\n  tag={user.tag}\n  location={user.location}\n  avatar={user.avatar}\n  stats={user.stats}\n/>\n \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}